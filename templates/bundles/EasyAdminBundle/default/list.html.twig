{% extends '@!EasyAdmin/default/list.html.twig' %}

{% block global_actions %}
    {% if easyadmin_action_is_enabled_for_list_view('new', _entity_config.name) %}
        {% set _action = easyadmin_get_action_for_list_view('new', _entity_config.name) %}
        {% block new_action %}
            <div class="button-action">
                <a class="{{ _action.css_class|default('') }}" href="{{ path('easyadmin', _request_parameters|merge({ action: _action.name })) }}" target="{{ _action.target }}">
                    {% if _action.icon %}<i class="fa fa-fw fa-{{ _action.icon }}"></i>{% endif %}
                    {{ _action.label is defined and not _action.label is empty ? _action.label|trans(_trans_parameters) }}
                </a>
            </div>
        {% endblock new_action %}
    {% endif %}

    {% if easyadmin_action_is_enabled_for_list_view('search', _entity_config.name) %}
        {% set _action = easyadmin_get_action_for_list_view('search', _entity_config.name) %}

        {% block search_action %}
            <div class="form-action form-action-search {{ _action.css_class|default('') }}">
                <form method="get" action="{{ path('easyadmin') }}">
                    {% block search_form %}
                        <input type="hidden" name="action" value="search">
                        <input type="hidden" name="entity" value="{{ _request_parameters.entity }}">
                        {# if the Request query doesn't define 'sortField' and 'sortDirection', we add them in the
                           controller (but they don't appear in the request URI). When users click on a column to
                           sort results, 'sortField' and 'sortDirection' are added to the Request query and they
                            appear in the request URI too. So, checking if 'sortField' and 'sortDirection' is the
                            only way to differentiate between sorting made by user and sorting made by us. We only
                            need to persist the sorting if it's explicitly made by the user. #}
                        {% if 'sortField' in app.request.uri %}
                            <input type="hidden" name="sortField" value="{{ _request_parameters.sortField }}">
                        {% endif %}
                        {% if 'sortDirection' in app.request.uri %}
                            <input type="hidden" name="sortDirection" value="{{ _request_parameters.sortDirection }}">
                        {% endif %}
                        <input type="hidden" name="menuIndex" value="{{ _request_parameters.menuIndex }}">
                        <input type="hidden" name="submenuIndex" value="{{ _request_parameters.submenuIndex }}">
                        {% for name, value in _request_parameters.filters|easyadmin_form_hidden_params('filters') %}
                            <input type="hidden" name="{{ name }}" value="{{ value }}">
                        {% endfor %}
                        <div class="form-group">
                            <div class="form-widget">
                                <input class="form-control" type="search" name="query" value="{{ app.request.get('query')|default('') }}" placeholder="{{ _action.label|default('action.search')|trans(_trans_parameters) }}">
                            </div>
                        </div>
                    {% endblock %}
                </form>
            </div>
        {% endblock search_action %}
    {% endif %}

    {% if _has_filters %}
        {% set _applied_filters = app.request.attributes.get('easyadmin').filters.applied|default(false) %}
        {% block filters_action %}
            <div class="btn-group action-filters">
                <a href="{{ path('easyadmin', _request_parameters|merge({ action: 'filters', referer_action: app.request.get('action') })) }}" class="btn btn-secondary btn-labeled btn-labeled-right action-filters-button {{ _applied_filters ? 'action-filters-applied' }}" data-modal="#modal-filters">
                    <i class="fa fa-filter fa-fw"></i> {{ 'filter.title'|trans(_trans_parameters, 'EasyAdminBundle') }}{% if _applied_filters %} <span class="text-primary">({{ _applied_filters|length }})</span>{% endif %}
                </a>
                {% if _applied_filters %}
                    <a href="{{ path('easyadmin', _request_parameters|merge({ filters: null })) }}" class="btn btn-secondary action-filters-reset">
                        <i class="fa fa-close"></i>
                    </a>
                {% endif %}
            </div>
        {% endblock filters_action %}
    {% endif %}


{% endblock global_actions %}
