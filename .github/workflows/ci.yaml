name: CI

on: [push]

jobs:
  build:
    runs-on: [ubuntu-latest]
    container:
      image: mrabs/php7_4-mysql-composer2-nodejs15

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: madatsara
          MYSQL_ROOT_PASSWORD: secret
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v1
      - name: composer update
        run: composer update --prefer-dist --no-ansi --no-interaction --no-progress

  qa:
    needs: build
    runs-on: [ubuntu-latest]
    container:
      image: mrabs/php7_4-mysql-composer2-nodejs15

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: madatsara
          MYSQL_ROOT_PASSWORD: secret
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v1
      - name: Quality code
        run: |
          composer update --prefer-dist --no-ansi --no-interaction --no-progress
          composer qa

  test:
    needs: qa
    runs-on: [ubuntu-latest]
    container:
      image: mrabs/php7_4-mysql-composer2-nodejs15

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: madatsara_test
          MYSQL_ROOT_PASSWORD: secret
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v1
      - name: Unit test
        run: |
          composer update --prefer-dist --no-ansi --no-interaction --no-progress
          composer test

  deploy_dev:
    if: github.ref == 'refs/heads/develop'
    needs: test
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Push to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.PATH_DEVELOP }}
            git pull
            dep deploy

  deploy_main:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Push to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.PATH_MAIN }}
            git pull
            dep deploy